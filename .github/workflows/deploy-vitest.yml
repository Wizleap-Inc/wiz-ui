name: Vue.js Vitest Deploy

on:
  push:
    paths:
      - "**/*.test.ts"
    branches-ignore:
      - "main"
      - "develop"

env:
  AWS_REGION: ap-northeast-1
  DEPLOY_PATH: coverage
  DEPLOY_BUCKET: wizleap-engineer-deploy
  DEPLOY_TYPE: jest
  NOTIFICATION_WEBHOOK_URL: ${{ secrets.SLACK_COMPONENT_STORY_WORKFLOW_URL }}
  DEPLOY_URL_POSTFIX: /index.html
  BUILD_COMMAND: npm run test:coverage

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - uses: ./.github/composite/prepare_node
        with:
          node-version: ${{ matrix.node-version }}
          runs-on: ${{ matrix.runs-on }}

      - name: Build ${{ env.DEPLOY_TYPE }}
        run: ${{ env.BUILD_COMMAND }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get pull request info
        id: get_pull_request_info
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            echo ::set-output name=repository::$(echo ${{ github.repository }} | cut -d '/' -f 2)
            echo ::set-output name=commit_message::$(git log --format=%B -n 1 HEAD)
            echo ::set-output name=branch_name::$(git rev-parse --abbrev-ref HEAD)
            echo ::set-output name=pull_request_number::$(gh pr view --json number --jq .number)
            echo ::set-output name=pull_request_title::$(gh pr view --json title -q .title)
            echo ::set-output name=pull_request_url::$(gh pr view --json url -q .url)
            echo ::set-output name=pull_request_author::$(gh pr view --json author -q .author.login)
          elif [[ '${{ github.event_name }}' == 'pull_request' ]]; then
            echo ::set-output name=repository::$(echo ${{ github.repository }} | cut -d '/' -f 2)
            echo ::set-output name=commit_message::$(git log --format=%B -n 1 HEAD^2)
            echo ::set-output name=pull_request_number::${{ github.event.number }}
            echo ::set-output name=pull_request_title::${{ github.event.pull_request.title }}
            echo ::set-output name=pull_request_url::${{ github.event.pull_request.html_url }}
            echo ::set-output name=pull_request_author::${{ github.event.pull_request.user.login }}
            echo ::set-output name=branch_name::${{ github.event.pull_request.head.ref }}
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy story to S3 bucket
        run: aws s3 sync ${{ env.DEPLOY_PATH }} s3://${{ env.DEPLOY_BUCKET }}/${{ github.event.repository.name }}/${{ env.DEPLOY_TYPE }}/${{ steps.get_pull_request_info.outputs.pull_request_number }} --delete

      - name: Notify to Slack Workflow
        uses: slackapi/slack-github-action@v1.16.0
        with:
          payload: |
            {
              "repository": "${{ steps.get_pull_request_info.outputs.repository }}",
              "deploy_url": "${{ secrets.ENGINEER_DEPLOY_ORIGIN }}/${{ github.event.repository.name }}/${{ env.DEPLOY_TYPE }}/${{ steps.get_pull_request_info.outputs.pull_request_number }}${{ env.DEPLOY_URL_POSTFIX }}",
              "pull_request_url": "${{ steps.get_pull_request_info.outputs.pull_request_url }}",
              "assigner": "${{ steps.get_pull_request_info.outputs.pull_request_author }}",
              "branch": "${{ steps.get_pull_request_info.outputs.branch_name }}",
              "title": "${{ steps.get_pull_request_info.outputs.pull_request_title }}",
              "commit": "${{ steps.get_pull_request_info.outputs.commit_message }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ env.NOTIFICATION_WEBHOOK_URL }}
